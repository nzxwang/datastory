bayes <- tibble(
theta = seq(from=0+dtheta,to=1,by=dtheta),
prior = 1,
likelihood1 = dbinom(x=9, size=12, prob=theta),
likelihood2 = dnbinom(x=9, size=3, prob=theta),
num1= prior * likelihood1,
post1 = num1 / sum(num1),
num2= prior * likelihood2,
post2 = num2 / sum(num2)
)
bayes <- tibble(
theta = seq(from=0,to=1,by=dtheta),
prior = 1,
likelihood1 = dbinom(x=9, size=12, prob=theta),
likelihood2 = dnbinom(x=9, size=3, prob=theta),
num1= prior * likelihood1,
post1 = num1 / sum(num1),
num2= prior * likelihood2,
post2 = num2 / sum(num2)
)
bayes %>% ggplot(aes(x=theta)) + geom_point(aes(y=post1))
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1)) +
geom_point(aes(y=post2))
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2))
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
View(bayes)
bayes <- tibble(
theta = seq(from=0+dtheta,to=1,by=dtheta),
prior = 1,
likelihood1 = dbinom(x=9, size=12, prob=theta),
likelihood2 = dnbinom(x=9, size=3, prob=theta),
num1= prior * likelihood1,
post1 = num1 / sum(num1),
num2= prior * likelihood2,
post2 = num2 / sum(num2)
)
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
?dnbinom
bayes <- tibble(
theta = seq(from=0+dtheta,to=1,by=dtheta),
prior = 1,
likelihood1 = dbinom(x=9, size=12, prob=theta),
likelihood2 = dnbinom(x=9, size=3, prob=(1-theta)),
num1= prior * likelihood1,
post1 = num1 / sum(num1),
num2= prior * likelihood2,
post2 = num2 / sum(num2)
)
bayes <- tibble(
theta = seq(from=0+dtheta,to=1-dtheta,by=dtheta),
prior = 1,
likelihood1 = dbinom(x=9, size=12, prob=theta),
likelihood2 = dnbinom(x=9, size=3, prob=(1-theta)),
num1= prior * likelihood1,
post1 = num1 / sum(num1),
num2= prior * likelihood2,
post2 = num2 / sum(num2)
)
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
p1 <- pbinom(8, size=12,prob=0.5, lower.tail=FALSE)
bayes <- tibble(
theta = seq(from=0+dtheta,to=1-dtheta,by=dtheta),
prior = 1,
likelihood1 = dbinom(x=9, size=12, prob=theta),
likelihood2 = dnbinom(x=9, size=3, prob=(1-theta)),
num1= prior * likelihood1,
post1 = num1 / sum(num1),
num2= prior * likelihood2,
post2 = num2 / sum(num2)
)
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue", position="jitter")
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
bayes %>% ggplot(aes(x=theta)) +
geom_point(aes(y=post1), alpha=0.5, colour="red") +
geom_point(aes(y=post2), alpha=0.5, colour="blue")
?rep
library(tidyverse)
black <- c(119,16,12,7,3,2,0)
white <- c(1070,60,14,4,0,0,1)
resp <- c(rep(0:6,times=black), rep(0:6,times=white))
race <- factor(c(rep("black", sum(black)), rep("white", sum(white))),
+                levels = c("white","black"))
race <- factor(c(rep("black", sum(black)), rep("white", sum(white))), levels = c("white","black"))
victim <- data.frame(resp, race)
victim
victim <- tibble(resp, race)
victim
View(victim)
race %>% table
victim %>% group_by(race) %>% summarise(mean(resp))
resp
victim %>% group_by(race) %>% summarise(mean(resp))
race %>% table()
victim %>% group_by(race) %>% summarise(var(resp))
victim %>% table()
pGLM <- glm(resp ~ race, data=victim, family = poisson)
summary(pGLM)
coef(pGLM)[2]
coef(pGLM)
coef(pGLM)[2] %>% exp()
library(tidyverse)
black <- c(119,16,12,7,3,2,0)
white <- c(1070,60,14,4,0,0,1)
resp <- c(rep(0:6,times=black), rep(0:6,times=white))
race <- factor(c(rep("black", sum(black)), rep("white", sum(white))), levels = c("white","black"))
victim <- tibble(resp, race)
victim$race %>% table()
victim %>% group_by(race) %>% summarise(mean(resp))
victim %>% group_by(race) %>% summarise(var(resp))
victim %>% table()
pGLM <- glm(resp ~ race, data=victim, family = poisson)
summary(pGLM)
coef(pGLM)[2] %>% exp()
coef(pGLM)[2] %>% exp()
victim %>% group_by(race) %>% summarise(mean(resp))
victim %>% group_by(race) %>% summarise(mean =mean(resp))
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
coef(pGLM)[2] %>% exp()
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
coef(pGLM)[2]
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
?predict
predict(pGLM, newdata = data.frame(race=c("white","black")))
predict(pGLM, newdata = data.frame(race=c("white","black")))
victim %>% group_by(race) %>% summarise(mean=mean(resp))
victim %>% group_by(race) %>% summarise(variance=var(resp))
predict(pGLM)
resp$race
victim
victim$race
victim$race %>% unique
predict(pGLM, newdata = victim$race %>% unique())
predict(pGLM, newdata = race=c("white","black") %>% tibble())
predict(pGLM, newdata = c("white","black") %>% tibble())
predict(pGLM, newdata = tibble(race=c("white","black")))
predict(pGLM, newdata = tibble(race=c("white","black"))) %>% exp()
victim
fmeans
fmeans <- predict(pGLM, newdata = tibble(race=c("white","black"))) %>% exp()
fmeans
victim$race=="white
""
victim$race=="white"
victim$race=="white" %>% sum
sum(victim$race=="white")
victim %>% table()
victim %>% table() %>% as_tibble()
?dpois
dpois(0:6,lambda = fmeans[1])
fittedW <- dpois(0:6,lambda = fmeans[1]) * sum(victim$race=="white")
fittedB <- dpois(0:6,lambda = fmeans[2]) * sum(victim$race=="black")
victim
victim %>% group_by(resp,race) %>% summarise(n())
?n
victim %>% summarise(n())
victim %>% group_by(race,resp) %>% summarise(n())
?spread
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks %>% gather(stock, price, -time)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm %>% spread(stock, price)
victim %>% group_by(race,resp) %>% summarise(n())
victim %>% group_by(race,resp) %>% summarise(count = n())
victim %>% group_by(race,resp) %>% summarise(count = n()) %>% spread(key=race, value=count)
victim
victim %>% group_by(resp,race) %>% summarise(count = n()) %>% spread(key=race, value=count)
victim %>% group_by(resp,race) %>% summarise(count = n()) %>% spread(key=race, value=count)
?countreg
victim
black
tidy <- tibble(resp=0:6,
blackObs=black,
whiteObs=white,
blackFit=fittedB,
whiteObs=fittedW)
tidy <- tibble(resp=0:6,
blackObs=black,
whiteObs=white,
blackFit=fittedB,
whiteFit=fittedW)
tidy
?gather
tidy %>% gather(blackObs, whiteObs, blackFit, key = Obs, value=frequency())
tidy %>% gather(blackObs, whiteObs, blackFit, key = Obs, value=count)
tidy %>% gather(blackObs, whiteObs, blackFit, whiteFit, key = Obs, value=count)
rep(0:6,2)
tidy <- tibble(resp=0:6,
blackObs=black,
whiteObs=white,
blackFit=fittedB,
whiteFit=fittedW)
tidy
?mutate_at
?factor
tidy <- tibble(resp=0:6,
obs=factor(rep(rep("observed",7),rep("fitted",7),2)),
count=c(white,fittedW,black,fittedB))
rep(rep("observed",7),rep("fitted",7),2)
rep("observed",7)
rep(c(rep("observed",7),rep("fitted",7)),2)
tidy <- tibble(resp=0:6,
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
count=c(white,fittedW,black,fittedB))
tidy <- tibble(resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
count=c(white,fittedW,black,fittedB))
tidy
tidy <- tibble(resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14)))
count=c(white,fittedW,black,fittedB))
tidy <- tibble(resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB))
tidy
tidy %>% spread(key=resp, value=count)
tidy %>% spread(key=obs, value=count)
tidy %>% spread(key=race, value=count)
tidy %>% spread(key=obs,race, value=count)
tidy
tidy %>% spread(key=obs,race, value=count)
tidy %>% spread(key=obs, value=count)
tidy %>% spread(key=obs, value=count) %>% spread(key=race, value=count)
tidy
tidy %>% ggplot(aes(x=resp,y=count)) + geom_col(position=obs,colour=race)
tidy %>% ggplot(aes(x=resp,y=count)) + geom_col(aes(position=obs,colour=race))
tidy %>% ggplot(aes(x=resp,y=count)) + geom_col(aes(position=obs,fill=race))
resp=rep(0:6,4),
tidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB))
tidy %>% mutate(logcount=log(count))
resp=rep(0:6,4),
tidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB)) %>%
mutate(logcount=log(count))
tidy %>% ggplot(aes(x=resp,y=logcount)) + geom_col(aes(position=obs,fill=race))
tidy %>% ggplot(aes(x=resp,y=logcount)) + geom_point(aes(fill=race), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=logcount)) + geom_point(aes(colour=race), position = "dodge")
?str_c
resp=rep(0:6,4),
tidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB)) %>%
mutate(logcount=log(count),
combined_factor=str_c(sep="_",obs,race))
tidy %>% ggplot(aes(x=resp,y=logcount)) + geom_col(aes(fill=combined_factor), position = "dodge")
tidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB)) %>%
mutate(logcount=log(count),
combined_factor=str_c(sep="_",race,obs))
tidy %>% ggplot(aes(x=resp,y=logcount)) + geom_col(aes(fill=combined_factor), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) + geom_col(aes(fill=combined_factor), position = "dodge")
tidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB)) %>%
mutate(sqrtcount=sqrt(count),
combined_factor=str_c(sep="_",race,obs))
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) + geom_col(aes(fill=combined_factor), position = "dodge")
tidy
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race),susbet=.(obs=="observed") position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race),susbet=.(obs=="observed") position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race),subset=.(obs=="observed") position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race), subset=.(obs=="observed"), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race), subset = .(obs=="observed"), position = "dodge")
library(plyr)
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race), subset = .(obs=="observed"), position = "dodge")
?susbet
?subset
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race), subset = tidy(obs=="observed"), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(aes(fill=race), subset = tidy[obs=="observed"], position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge") +
geom_line(data=subset(tidy, obs=='fitted'), aes(colour=race), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge") +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race), position = "dodge")
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.5) +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race))
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.2) +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race))
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.1) +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race))
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race))
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(tidy, obs=='fitted'), aes(colour=race))
victim
victim %>% group_by(race) %>% summarise(n())
victim %>% group_by(race) %>% summarise(n())
victim %>% group_by(race) %>% summarise(n())
victim %>% group_by(race)
victim %>% group_by(race) %>% summarise(n())
victim %>% group_by(race) %>% summarise(n())
victim %>% group_by(race) %>% summarise(n=n())
victim %>% group_by(race) %>% summarise(n=count())
victim %>% group_by(resp,race) %>% summarise(count = n())
library(tidyverse)
library(MASS)
black <- c(119,16,12,7,3,2,0)
white <- c(1070,60,14,4,0,0,1)
resp <- c(rep(0:6,times=black), rep(0:6,times=white))
race <- factor(c(rep("black", sum(black)), rep("white", sum(white))), levels = c("white","black"))
victim <- tibble(resp, race)
victim$race %>% table()
victim %>% group_by(race) %>% summarise(mean=mean(resp))
victim %>% group_by(race) %>% summarise(variance=var(resp))
victim %>% group_by(resp,race) %>% summarise(count = n()) %>% spread(key=race, value=count)
pGLM <- glm(resp ~ race, data=victim, family = poisson)
summary(pGLM)
coef(pGLM)[2]
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
fmeans <- predict(pGLM, newdata = tibble(race=c("white","black"))) %>% exp()
fmeans
fittedW <- dpois(0:6,lambda = fmeans[1]) * sum(victim$race=="white")
fittedB <- dpois(0:6,lambda = fmeans[2]) * sum(victim$race=="black")
#TODO there must be something better than combined factor?
tidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,fittedW,black,fittedB)) %>%
mutate(sqrtcount=sqrt(count))
tidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(tidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(tidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(tidy, obs=='fitted'), aes(colour=race))
victim %>% group_by(race) %>% summarise(n())
victim %>% group_by(race) %>% summarise(count=n())
nbGLM <- glm.nb(resp ~ race, data=victim)
summary(nbGLM)
tidy
install.packages("countreg", repos="http://R-Forge.R-project.org")
countreg::rootogram(pGLM)
?rootogram
pGLM
coef(pGLM)[2]
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
coef(pGLM)
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
nbGLM <- glm.nb(resp ~ race, data=victim)
summary(nbGLM)
pGLM <- glm(resp ~ race, data=victim, family = poisson)
summary(pGLM)
?nbinom
?dnbinom
nbinommeans <- exp(predict(nbGLM, newdata = data.frame(race = c("white","black"))))
nbinommeans
nbinommeans + nbinommeans^2 * (1/nbGLM$theta)
library(tidyverse)
library(MASS)
black <- c(119,16,12,7,3,2,0)
white <- c(1070,60,14,4,0,0,1)
resp <- c(rep(0:6,times=black), rep(0:6,times=white))
race <- factor(c(rep("black", sum(black)), rep("white", sum(white))), levels = c("white","black"))
victim <- tibble(resp, race)
victim %>% group_by(race) %>% summarise(count=n())
victim %>% group_by(race) %>% summarise(mean=mean(resp))
victim %>% group_by(race) %>% summarise(variance=var(resp))
victim %>% group_by(resp,race) %>% summarise(count = n()) %>% spread(key=race, value=count)
pGLM <- glm(resp ~ race, data=victim, family = poisson)
summary(pGLM)
coef(pGLM)
victim %>% group_by(race) %>% summarise(log_mean=log(mean(resp)))
poismeans <- predict(pGLM, newdata = tibble(race=c("white","black"))) %>% exp()
poismeans
poisW <- dpois(0:6,lambda = poismeans[1]) * sum(victim$race=="white")
poisB <- dpois(0:6,lambda = poismeans[2]) * sum(victim$race=="black")
poisTidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,poisW,black,poisB)) %>%
mutate(sqrtcount=sqrt(count))
poisTidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(poisTidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(poisTidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(poisTidy, obs=='fitted'), aes(colour=race))
nbGLM <- glm.nb(resp ~ race, data=victim)
summary(nbGLM)
nbinommeans <- exp(predict(nbGLM, newdata = data.frame(race = c("white","black"))))
#TODO what is a dispersion parameter?
nbinommeans + nbinommeans^2 * (1/nbGLM$theta)
nbinomW <- dpois(0:6,lambda = poismeans[1]) * sum(victim$race=="white")
nbinomB <- dpois(0:6,lambda = poismeans[2]) * sum(victim$race=="black")
nbinomTidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,poisW,black,poisB)) %>%
mutate(sqrtcount=sqrt(count))
nbinomTidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(poisTidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(poisTidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(poisTidy, obs=='fitted'), aes(colour=race))
nbGLM$theta
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1])) %>%
table()
exp(coef(nbGLM)[1])
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1])) %>%
table() %>% str
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1])) %>%
table() %>% tibble
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1])) %>%
table() %>% str
victim
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1])) %>%
table() %>% str
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1])) %>%
table()
rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))
victim
nbinomW <- rnbinom(n = 1149, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))
nbinomB <- rnbinom(n = 159, size = nbGLM$theta, mu = exp(sum(coef(nbGLM))))
nbinomW %>% table
nbinomB %>% table
resp
?dnbinom
nbinomW <- dnbinom(n = 0:6, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))
nbinomW <- dnbinom(x = 0:6, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))
nbinomW
nbinomB <- dnbinom(n = 0:6, size = nbGLM$theta, mu = exp(sum(coef(nbGLM))))
nbinomB <- dnbinom(x = 0:6, size = nbGLM$theta, mu = exp(sum(coef(nbGLM))))
nbinomTidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,nbinomW,black,nbinomB)) %>%
mutate(sqrtcount=sqrt(count))
nbinomTidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(poisTidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(poisTidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(poisTidy, obs=='fitted'), aes(colour=race))
nbinomW <- dnbinom(x = 0:6, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))
nbinomB <- dnbinom(x = 0:6, size = nbGLM$theta, mu = exp(sum(coef(nbGLM))))
nbinomTidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,nbinomW,black,nbinomB)) %>%
mutate(sqrtcount=sqrt(count))
nbinomTidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(nbinomTidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(nbinomTidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(nbinomTidy, obs=='fitted'), aes(colour=race))
nbinomW <- dnbinom(x = 0:6, size = nbGLM$theta, mu = exp(coef(nbGLM)[1]))* sum(victim$race=="white")
nbinomB <- dnbinom(x = 0:6, size = nbGLM$theta, mu = exp(sum(coef(nbGLM))))* sum(victim$race=="black")
nbinomTidy <- tibble(
resp=rep(0:6,4),
obs=factor(rep(c(rep("observed",7),rep("fitted",7)),2)),
race=factor(c(rep("white",14),rep("black",14))),
count=c(white,nbinomW,black,nbinomB)) %>%
mutate(sqrtcount=sqrt(count))
nbinomTidy %>% ggplot(aes(x=resp,y=sqrtcount)) +
geom_col(data=subset(nbinomTidy, obs=='observed'), aes(fill=race), position = "dodge", alpha=0.4) +
geom_point(data=subset(nbinomTidy, obs=='fitted'), aes(colour=race)) +
geom_line(data=subset(nbinomTidy, obs=='fitted'), aes(colour=race))
